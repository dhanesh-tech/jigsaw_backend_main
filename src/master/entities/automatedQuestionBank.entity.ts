import {
  Column,
  CreateDateColumn,
  Entity,
  Index,
  JoinColumn,
  ManyToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';
import { QUESTION_DIFFICULTY_LEVELS, QUESTION_STATUS } from '../utilities/enum';
import { Skill } from './skill.entity';
import { User } from 'src/users/entities/user.entity';
import { Topic } from './topic.entity';

@Entity({ name: 'automated_question_bank' })
export class AutomatedQuestionBank {
  // id: number -> primary id of question
  // question_text: string; -> it defines the question
  // time_to_answer_in_minutes: number; -> max_time required to answer
  // difficulty_level: string; -> question difficulty level enum ['easy', 'medium', 'hard']
  // status: string; -> question status enum [ 'duplicate','moderated','archived','rejected','pending',]
  // skill_id: Skill; -> references to skills table to which the question belongs
  // topic_id: Topic; -> references to skill_topic table to which the question belongs
  // topic_list: jsonb; -> topic name
  // is_ai_generated: boolean; -> defines if the question is generated by AI
  // created_by_id: User; -> references to users_customuser table to which the question belongs
  // reviewed_by_id: User; -> references to users_customuser table to which the question belongs, will be used for reviewing the question
  // created_at: Date;
  // updated_at: Date;

  @PrimaryGeneratedColumn()
  id: number;

  @Column()
  question_text: string;

  @Column()
  time_to_answer_in_minutes: number;

  @Column({ default: false })
  is_ai_generated: boolean;

  @Column({
    enum: QUESTION_DIFFICULTY_LEVELS,
    type: 'enum',
  })
  @Index('idx-automated-question-bank-difficulty-level')
  difficulty_level: string;

  @Column({
    enum: QUESTION_STATUS,
    type: 'enum',
    default: QUESTION_STATUS.pending,
  })
  @Index('idx-automated-question-bank-status')
  status: string;

  @ManyToOne(() => Skill, { onDelete: 'SET NULL' })
  @JoinColumn({ name: 'skill_id' })
  @Index('idx-automated-question-bank-skill-id')
  skill_id: Skill;

  @ManyToOne(() => Topic, { onDelete: 'SET NULL', nullable: true })
  @JoinColumn({ name: 'topic_id' })
  topic_id: Topic;

  @Column({ type: 'jsonb', nullable: true })
  topic_list: any;

  @ManyToOne(() => User, { onDelete: 'SET NULL', nullable: true })
  @JoinColumn({ name: 'created_by_id' })
  @Index('idx-automated-question-bank-created-by-id')
  created_by_id: User;

  @ManyToOne(() => User, { onDelete: 'SET NULL', nullable: true })
  @JoinColumn({ name: 'reviewed_by_id' })
  @Index('idx-automated-question-bank-reviewed-by-id')
  reviewed_by_id: User;

  @CreateDateColumn({
    type: 'timestamp',
    default: () => 'CURRENT_TIMESTAMP(6)',
  })
  created_at: Date;

  @UpdateDateColumn({
    type: 'timestamp',
    default: () => 'CURRENT_TIMESTAMP(6)',
    onUpdate: 'CURRENT_TIMESTAMP(6)',
  })
  updated_at: Date;
}
