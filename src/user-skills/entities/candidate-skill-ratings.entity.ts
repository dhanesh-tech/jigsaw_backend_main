import { Skill } from 'src/master/entities/skill.entity';
import { User } from 'src/users/entities/user.entity';
import {
  Column,
  CreateDateColumn,
  Entity,
  Index,
  JoinColumn,
  ManyToOne,
  PrimaryGeneratedColumn,
  Unique,
  UpdateDateColumn,
} from 'typeorm';
/**
 * Candidate Skill Rating Entity
 *
 * This entity represents a rating given to a candidate's skill.
 *
 * - @property `id`: Unique identifier for the rating.
 * - @property `additional_comments`: Additional comments about the rating.
 * - @property `is_ai_generated`: Flag to indicate if the rating was generated by an AI.
 * - @property `rating_value`: The value of the rating.
 * - @property `skill_id`: Reference to the skill being rated.
 * - @property `candidate_id`: Reference to the user whose skill is being rated.
 * - @property `rated_by_id`: Reference to the user who provided the rating.
 * - @property `created_at`: Timestamp indicating when the rating was created.
 * - @property `updated_at`: Timestamp indicating when the rating was last updated.
 */

@Entity({ name: 'candidate_skill_rating' })
@Unique(['candidate_id', 'skill_id', 'rated_by_id'])
export class CandidateSkillRating {
  @PrimaryGeneratedColumn()
  id: number;

  @Column('text', { nullable: true })
  additional_comments: string;

  @Column('decimal')
  rating_value: number;

  @Column({ default: false })
  is_ai_generated: boolean;

  @ManyToOne(() => Skill, { onDelete: 'CASCADE' })
  @JoinColumn({ name: 'skill_id' })
  @Index('idx-candidate-skill-rating-skill-id')
  skill_id: Skill;

  @ManyToOne(() => User, { onDelete: 'CASCADE' })
  @JoinColumn({ name: 'candidate_id' })
  @Index('idx-candidate-skill-rating-candidate-id')
  candidate_id: User;

  @ManyToOne(() => User, { onDelete: 'CASCADE' })
  @JoinColumn({ name: 'rated_by_id' })
  @Index('idx-candidate-skill-rating-rated-by-id')
  rated_by_id: User;

  @CreateDateColumn({
    type: 'timestamp',
    default: () => 'CURRENT_TIMESTAMP(6)',
  })
  created_at: Date;

  @UpdateDateColumn({
    type: 'timestamp',
    default: () => 'CURRENT_TIMESTAMP(6)',
    onUpdate: 'CURRENT_TIMESTAMP(6)',
  })
  updated_at: Date;
}
